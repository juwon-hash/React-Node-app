{"version":3,"sources":["components/layout/Toolbar.js","components/layout/Header.js","components/layout/Contents.js","components/layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Toolbar","class","src","href","React","Component","Header","Axios","method","url","then","res","console","log","data","catch","error","id","Contents","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sTAgCeA,G,uLA3BX,OACE,yBAAKC,MAAM,cACT,yBAAKA,MAAM,eACT,yBAAKA,MAAM,WAAWC,IAAI,wCAG5B,yBAAKD,MAAM,wBACT,uBAAGE,KAAK,IAAIF,MAAM,yBAAlB,QACA,uBAAGE,KAAK,IAAIF,MAAM,yBAAlB,UACA,yBAAKA,MAAM,qBACT,4CACA,yBAAKA,MAAM,8CACT,uBAAGE,KAAK,IAAIF,MAAM,yBAAlB,UACA,uBAAGE,KAAK,IAAIF,MAAM,yBAAlB,UACA,uBAAGE,KAAK,IAAIF,MAAM,yBAAlB,aAIN,yBAAKA,MAAM,YACT,uBAAGE,KAAK,GAAGF,MAAM,YAAjB,sBACA,4BAAQA,MAAM,WAAd,kC,GAtBYG,IAAMC,Y,iBC0FbC,G,kMAvFXC,IAAM,CACJC,OAAQ,MACRC,IAAK,SAENC,MAAK,SAAUC,GACdC,QAAQC,IAAIF,EAAIG,SAEjBC,OAAM,SAAUC,GACfJ,QAAQC,IAAIG,Q,+BAId,OACE,yBAAKf,MAAM,aACT,yBAAKA,MAAM,SACT,6BACE,+BACE,4BACE,kDACA,+DACA,+DACA,iEACA,qEACA,mDAEF,4BACE,4CACA,0CACA,yCACA,qDACA,+CACA,+CACA,0CAEF,4BACE,4CACA,0CACA,yCACA,qDACA,+CACA,+CACA,0CAEF,4BACE,4CACA,0CACA,yCACA,qDACA,+CACA,+CACA,0CAEF,4BACE,4CACA,0CACA,yCACA,qDACA,+CACA,+CACA,4CAIN,6BACE,yBAAKgB,GAAG,UACN,oDACA,4BACE,oDACA,uDACA,0DACA,uDACA,0DACA,uDACA,0DACA,uDACA,mE,GA7EKb,IAAMC,YCWZa,E,iLAXX,OACE,yBAAKjB,MAAM,eACT,wCACA,wC,GALeG,IAAMC,WCUdc,E,iLARX,OACE,6BACE,2C,GAJaf,IAAMC,WCiBZe,MAXf,WACE,OACE,yBAAKH,GAAG,OACN,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFcI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtB,MAAK,SAAAuB,GACjCA,EAAaC,kB","file":"static/js/main.7244f32a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Toolbar.css';\r\n\r\nclass Toolbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div class='toolbarDiv'>\r\n        <div class='mainLogoDiv'>\r\n          <img class=\"mainLogo\" src=\"https://source.unsplash.com/random\" />\r\n        </div>\r\n        {/* <div class=\"nav\"> */}\r\n        <div class=\"w3-bar w3-light-grey\">\r\n          <a href=\"#\" class=\"w3-bar-item w3-button\">Home</a>\r\n          <a href=\"#\" class=\"w3-bar-item w3-button\">Link 1</a>\r\n          <div class=\"w3-dropdown-hover\">\r\n            <button>Dropdown</button>\r\n            <div class=\"w3-dropdown-content w3-bar-block w3-card-4\">\r\n              <a href=\"#\" class=\"w3-bar-item w3-button\">Link 1</a>\r\n              <a href=\"#\" class=\"w3-bar-item w3-button\">Link 2</a>\r\n              <a href=\"#\" class=\"w3-bar-item w3-button\">Link 3</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"loginDiv\">\r\n          <a href=\"\" class=\"loginBtn\">로그인</a>\r\n          <button class=\"joinBtn\">가입하기</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport Axios from 'axios';\r\nimport './Header.css';\r\n\r\nclass Header extends React.Component {\r\n  componentDidMount() {\r\n    Axios({\r\n      method: 'get',\r\n      url: '/api'\r\n    })\r\n    .then(function (res) {\r\n      console.log(res.data);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n  render() {\r\n    return(\r\n      <div class=\"headerDiv\">\r\n        <div class='width'>\r\n          <div>\r\n            <table>\r\n              <tr>\r\n                <th>거래소</th>\r\n                <th>실시간 시세</th>\r\n                <th>실시간 시세</th>\r\n                <th>24시간 변동률</th>\r\n                <th>한국 프리미엄</th>\r\n                <th>거래량</th>\r\n              </tr>\r\n              <tr>\r\n                <td>빗썸</td>\r\n                <td>10,100,100</td>\r\n                <td>9,100,100</td>\r\n                <td>△ 274,000 +2.68%</td>\r\n                <td>+29,263 +0.28%\t</td>\r\n                <td>+29,263 +0.28%\t</td>\r\n                <td>1,077 BTC</td>\r\n              </tr>\r\n              <tr>\r\n                <td>빗썸</td>\r\n                <td>10,100,100</td>\r\n                <td>9,100,100</td>\r\n                <td>△ 274,000 +2.68%</td>\r\n                <td>+29,263 +0.28%\t</td>\r\n                <td>+29,263 +0.28%\t</td>\r\n                <td>1,077 BTC</td>\r\n              </tr>\r\n              <tr>\r\n                <td>빗썸</td>\r\n                <td>10,100,100</td>\r\n                <td>9,100,100</td>\r\n                <td>△ 274,000 +2.68%</td>\r\n                <td>+29,263 +0.28%\t</td>\r\n                <td>+29,263 +0.28%\t</td>\r\n                <td>1,077 BTC</td>\r\n              </tr>\r\n              <tr>\r\n                <td>빗썸</td>\r\n                <td>10,100,100</td>\r\n                <td>9,100,100</td>\r\n                <td>△ 274,000 +2.68%</td>\r\n                <td>+29,263 +0.28%\t</td>\r\n                <td>+29,263 +0.28%\t</td>\r\n                <td>1,077 BTC</td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n          <div>\r\n            <div id=\"top-10\">\r\n              <span>인기글</span>\r\n              <ol>\r\n                <li>인기글 1</li>\r\n                <li>인기글 1222</li>\r\n                <li>인기글 1222123</li>\r\n                <li>인기글 1222</li>\r\n                <li>인기글 1222123</li>\r\n                <li>인기글 1222</li>\r\n                <li>인기글 1222123</li>\r\n                <li>인기글 1222</li>\r\n                <li>인기글 1222123</li>\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nclass Contents extends React.Component {\r\n  render() {\r\n    return(\r\n      <div class=\"contentsDiv\">\r\n        <h1>Contents</h1>\r\n        <p>test</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Contents;","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <h1>Footer</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Toolbar from './components/layout/Toolbar';\nimport MHeader from './components/layout/Header';\nimport Contents from './components/layout/Contents';\nimport Footer from './components/layout/Footer';\nimport Header from './components/layout/Header';\n\nfunction App() {\n  return (\n    <div id='app'>\n      <Toolbar></Toolbar>\n      <Header></Header>\n      <Contents></Contents>\n      <Footer></Footer>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}